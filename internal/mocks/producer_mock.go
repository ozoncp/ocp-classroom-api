// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ozoncp/ocp-classroom-api/internal/producer (interfaces: LogProducer)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLogProducer is a mock of LogProducer interface.
type MockLogProducer struct {
	ctrl     *gomock.Controller
	recorder *MockLogProducerMockRecorder
}

// MockLogProducerMockRecorder is the mock recorder for MockLogProducer.
type MockLogProducerMockRecorder struct {
	mock *MockLogProducer
}

// NewMockLogProducer creates a new mock instance.
func NewMockLogProducer(ctrl *gomock.Controller) *MockLogProducer {
	mock := &MockLogProducer{ctrl: ctrl}
	mock.recorder = &MockLogProducerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLogProducer) EXPECT() *MockLogProducerMockRecorder {
	return m.recorder
}

// Send mocks base method.
func (m *MockLogProducer) Send(arg0 int, arg1, arg2 interface{}, arg3 error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockLogProducerMockRecorder) Send(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockLogProducer)(nil).Send), arg0, arg1, arg2, arg3)
}
